usethis::use_testthat()
usethis::use_package("httr2")
usethis::use_package("jsonlite")
usethis::use_package("tibble")
License: MIT + file LICENSE
usethis::use_mit_license()
devtools::test()
install.packages("devtools")
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
library(mockery)
install.packages("mockery", type = "binary")
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
packageVersion("testthat")
devtools::test()
devtools::test()
library(mockery)
devtools::test()
devtools::test()
countries <- ph_available_countries()
print(countries)
devtools::test()
country_info <- ph_country_info("DE")
print(country_info)
print(country_info['borders'])
borders
is_holiday <- ph_is_today_holiday("DE")
is_holiday
long_weekends <- ph_long_weekends("DE", 2025)
long_weekends
long_weekends['bridgeDays']
long_weekends['bridgeDays'][1]
long_weekends['bridgeDays'][1][1]
holidays <- ph_public_holidays("DE", 2025)
holidays
library(roxygen2)
roxygenize("/Users/zhengqijia/Downloads/ubc/ubco-block5/534/project/publicholidays")
usethis::use_version()
usethis::use_version()
library(testthat)
test_dir("tests/testthat/", reporter = "html")
library(covr)
report()
covr::report()
coverage <- package_coverage()
report(coverage, file = "coverage_report.html")
install.packages("DT", type="binary")
install.packages("htmltools", type="binary")
install.packages("htmltools", type="binary")
install.packages("htmltools", type = "binary")
report(coverage, file = "coverage_report.html")
library(covr)
report(coverage, file = "coverage_report.html")
detach("package:htmltools", unload = TRUE)
detach("htmltools", unload = TRUE)
install.packages("htmltools")
install.packages("htmltools")
report(coverage, file = "coverage_report.html")
library(covr)
report(coverage, file = "coverage_report.html")
report(coverage, file = "coverage_report.html")
report(coverage, file = "coverage_report.html")
report(coverage, file = "coverage_report.html")
report(coverage, file = "coverage_report.html")
report(coverage, file = "coverage_report.html")
report(coverage, file = "coverage_report.html")
long_weekends['bridgeDays'][1]
report(coverage, file = "coverage_report.html")
report(coverage, file = "coverage_report.html")
devtools::test()
devtools::test()
mockery::stub(ph_is_today_holiday, "Sys.Date", function() as.Date("2025-01-01"))
today
ph_is_today_holiday
ph_country_info("DE")
ph_country_info("DE")[0]
ph_country_info("DE")[0][0]
ph_country_info("DE")$commonName
devtools::test()
report(coverage, file = "coverage_report.html")
ph_country_info("DE")$base_url
report(coverage, file = "coverage_report.html")
expected <- tibble::tibble(
commonName = "Germany",
officialName = "Federal Republic of Germany",
countryCode = "DE",
region = "Europe",
borders = list(c("AT", "BE", "CZ", "DK", "FR", "LU", "NL", "PL", "CH"))
)
expected¥commonName
expected¥commonName
expected$commonName
devtools::test()
ph_country_info(“DE)
ph_country_info("DE")
ph_country_info("DE")$commonName
devtools::test()
devtools::test()
devtools::test()
ph_country_info("DE")
base_url
results = ph_country_info("DE")
library(publicholidays)
devtools::test()
report(coverage, file = "coverage_report.html")
devtools::test()
report(coverage, file = "coverage_report.html")
ph_available_countries()
ph_available_countries()
ph_available_countries()$ava_name
ph_available_countries()$ava_name
ph_available_countries()$name
devtools::test()
devtools::test()
ph_country_info("DE")
devtools::test()
report(coverage, file = "coverage_report.html")
devtools::test()
devtools::test()
ph_public_holidays("DE", 2025)
ph_public_holidays("DE", 2025)
devtools::test()
report(coverage, file = "coverage_report.html")
devtools::test()
report(coverage, file = "coverage_report.html")
devtools::test()
devtools::test()
report(coverage, file = "coverage_report.html")
devtools::test()
report(coverage, file = "coverage_report.html")
ph_public_holidays()
ph_public_holidays("DE", 9999)
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
ph_public_holidays("XX", 2023)
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
rm(list = c("ph_is_today_holiday"))
devtools::test()
devtools::test()
devtools::test()
